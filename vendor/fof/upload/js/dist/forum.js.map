{"version":3,"sources":["webpack://@fof/upload/webpack/bootstrap","webpack://@fof/upload/external \"flarum.core.compat['common/app']\"","webpack://@fof/upload/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@fof/upload/external \"flarum.core.compat['common/components/Button']\"","webpack://@fof/upload/external \"flarum.core.compat['common/Model']\"","webpack://@fof/upload/external \"flarum.core.compat['common/extend']\"","webpack://@fof/upload/external \"flarum.core.compat['common/Component']\"","webpack://@fof/upload/external \"flarum.core.compat['common/components/Alert']\"","webpack://@fof/upload/external \"flarum.core.compat['common/components/LoadingIndicator']\"","webpack://@fof/upload/external \"flarum.core.compat['common/components/TextEditor']\"","webpack://@fof/upload/external \"flarum.core.compat['forum/components/UserPage']\"","webpack://@fof/upload/external \"flarum.core.compat['common/utils/classList']\"","webpack://@fof/upload/external \"flarum.core.compat['common/utils/extractText']\"","webpack://@fof/upload/external \"flarum.core.compat['common/models/User']\"","webpack://@fof/upload/external \"flarum.core.compat['common/components/LinkButton']\"","webpack://@fof/upload/external \"flarum.core.compat['common/utils/mixin']\"","webpack://@fof/upload/external \"flarum.core.compat['forum/components/Post']\"","webpack://@fof/upload/external \"flarum.core.compat['common/components/Modal']\"","webpack://@fof/upload/./src/common/models/File.js","webpack://@fof/upload/./src/common/fileToBBcode.js","webpack://@fof/upload/./src/forum/states/FileListState.js","webpack://@fof/upload/./src/forum/components/UploadButton.js","webpack://@fof/upload/./src/forum/components/DragAndDrop.js","webpack://@fof/upload/./src/forum/components/PasteClipboard.js","webpack://@fof/upload/./src/forum/handler/Uploader.js","webpack://@fof/upload/./src/common/mimeToIcon.js","webpack://@fof/upload/./src/forum/components/UserFileList.js","webpack://@fof/upload/./src/forum/components/FileManagerModal.js","webpack://@fof/upload/./src/forum/components/FileManagerButton.js","webpack://@fof/upload/./src/forum/components/UploadsUserPage.js","webpack://@fof/upload/./src/forum/components/index.js","webpack://@fof/upload/./src/forum/index.js","webpack://@fof/upload/./src/forum/addUploadButton.js","webpack://@fof/upload/./src/forum/downloadButtonInteraction.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","flarum","core","compat","_inheritsLoose","subClass","superClass","constructor","__proto__","File","apiEndpoint","this","exists","data","id","bbcode","file","tag","uuid","humanSize","baseName","url","fileToBBcode","mixin","Model","attribute","path","type","size","createdAt","hidden","FileListState","user","files","moreResults","loading","setUser","loadResults","offset","app","store","find","filter","page","then","parseResults","loadMore","length","results","push","payload","links","next","redraw","addToList","Array","isArray","unshift","hasFiles","isLoading","hasMoreResults","empty","UploadButton","oninit","vnode","attrs","uploader","on","$","reset","isMediaUploadButton","oncreate","tooltip","view","buttonText","uploading","translator","trans","className","classList","icon","onclick","uploadButtonClicked","title","disabled","multiple","onchange","process","e","prop","upload","click","Component","DragAndDrop","composerElement","handlers","supportsFileDragging","addEventListener","out","dropping","div","document","createElement","window","unload","removeEventListener","isNotFile","event","dataTransfer","items","kind","preventDefault","over","add","remove","PasteClipboard","element","paste","clipboardData","indexOf","getAsFile","Uploader","callbacks","success","failure","uploaded","callback","dispatch","response","forEach","addBBcode","body","FormData","append","request","method","forum","serialize","raw","result","error","fileObj","pushObject","fileListState","image","archive","code","word","UserFileList","session","inModal","selectable","restrictFileType","downloadOnClick","filesBeingHidden","state","aria-live","screen","map","fileType","fileIcon","includes","fileSelectable","isSelectable","fileClassNames","selectedFiles","fileName","isFileHiding","aria-busy","deleteOthersMediaLibrary","aria-label","hideFile","onFileClick","extractText","src","draggable","alt","role","class","onFileSelect","open","confirm","alerts","show","Alert","index","findIndex","splice","FileManagerModal","multiSelect","dragDrop","onUpload","onremove","alertAttrs","hide","onSelect","transChoice","itemPosition","fileId","getById","composer","editor","insertAtCursor","Modal","FileManagerButton","Button","component","fileManagerButtonClicked","modal","UploadsUserPage","loadUser","route","param","content","viewOthersMediaLibrary","UserPage","components","initializers","User","extend","TextEditor","composerButtonVisiblity","f_","preview","originalIsFullScreen","isFullScreen","dragAndDrop","parents","Post","unbind","stopPropagation","currentTarget","dataset","fofUploadDownloadUuid","post","csrfToken","alert","models","routes","LinkButton","href","username"],"mappings":"2BACE,IAAIA,EAAmB,GAGvB,SAASC,EAAoBC,GAG5B,GAAGF,EAAiBE,GACnB,OAAOF,EAAiBE,GAAUC,QAGnC,IAAIC,EAASJ,EAAiBE,GAAY,CACzCG,EAAGH,EACHI,GAAG,EACHH,QAAS,IAUV,OANAI,EAAQL,GAAUM,KAAKJ,EAAOD,QAASC,EAAQA,EAAOD,QAASF,GAG/DG,EAAOE,GAAI,EAGJF,EAAOD,QA0Df,OArDAF,EAAoBQ,EAAIF,EAGxBN,EAAoBS,EAAIV,EAGxBC,EAAoBU,EAAI,SAASR,EAASS,EAAMC,GAC3CZ,EAAoBa,EAAEX,EAASS,IAClCG,OAAOC,eAAeb,EAASS,EAAM,CAAEK,YAAY,EAAMC,IAAKL,KAKhEZ,EAAoBkB,EAAI,SAAShB,GACX,oBAAXiB,QAA0BA,OAAOC,aAC1CN,OAAOC,eAAeb,EAASiB,OAAOC,YAAa,CAAEC,MAAO,WAE7DP,OAAOC,eAAeb,EAAS,aAAc,CAAEmB,OAAO,KAQvDrB,EAAoBsB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQrB,EAAoBqB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,iBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKX,OAAOY,OAAO,MAGvB,GAFA1B,EAAoBkB,EAAEO,GACtBX,OAAOC,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOrB,EAAoBU,EAAEe,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRzB,EAAoB6B,EAAI,SAAS1B,GAChC,IAAIS,EAAST,GAAUA,EAAOqB,WAC7B,WAAwB,OAAOrB,EAAgB,SAC/C,WAA8B,OAAOA,GAEtC,OADAH,EAAoBU,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRZ,EAAoBa,EAAI,SAASiB,EAAQC,GAAY,OAAOjB,OAAOkB,UAAUC,eAAe1B,KAAKuB,EAAQC,IAGzG/B,EAAoBkC,EAAI,GAIjBlC,EAAoBA,EAAoBmC,EAAI,I,gBClFrDhC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,e,8BCArB,SAASC,EAAeC,EAAUC,GAC/CD,EAASR,UAAYlB,OAAOY,OAAOe,EAAWT,WAC9CQ,EAASR,UAAUU,YAAcF,EACjCA,EAASG,UAAYF,EAHvB,mC,cCAAtC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,6B,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,iB,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,kB,gBCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,qB,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,4B,eCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,uC,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,iC,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,8B,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,2B,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,6B,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,uB,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,iC,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,uB,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,0B,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,4B,mLCIfM,E,0GAejBC,YAAA,WACI,MAAO,gBAAkBC,KAAKC,OAAS,IAAMD,KAAKE,KAAKC,GAAK,K,EAMhEC,OAAA,WACI,OC3BO,SAAsBC,GACjC,OAAQA,EAAKC,OAET,IAAK,OACD,wBAAyBD,EAAKE,OAA9B,SAA6CF,EAAKG,YAAlD,IAAiEH,EAAKI,WAAtE,cAGJ,IAAK,QACD,yBAA0BJ,EAAKE,OAA/B,SAA8CF,EAAKG,YAAnD,QAAsEH,EAAKK,MAA3E,IAAoFL,EAAKI,WAAzF,eAGJ,IAAK,gBACD,gCAAiCJ,EAAKK,MAAtC,IAGJ,QACI,OAAOL,EAAKK,ODWTC,CAAaX,O,SAvBMY,GAAMC,IAAO,CAC3CJ,SAAUI,IAAMC,UAAU,YAC1BC,KAAMF,IAAMC,UAAU,QACtBJ,IAAKG,IAAMC,UAAU,OACrBE,KAAMH,IAAMC,UAAU,QACtBG,KAAMJ,IAAMC,UAAU,QACtBN,UAAWK,IAAMC,UAAU,aAC3BI,UAAWL,IAAMC,UAAU,aAC3BP,KAAMM,IAAMC,UAAU,QACtBR,IAAKO,IAAMC,UAAU,OACrBK,OAAQN,IAAMC,UAAU,aEZPM,E,WACjB,aACIpB,KAAKqB,KAAO,KAEZrB,KAAKsB,MAAQ,GAEbtB,KAAKuB,aAAc,EAEnBvB,KAAKwB,SAAU,E,2BAQnBC,QAAA,SAAQJ,GAEAA,IAASrB,KAAKqB,OAGlBrB,KAAKqB,KAAOA,EAGZrB,KAAKsB,MAAQ,GAGbtB,KAAK0B,gB,EAQTA,YAAA,SAAYC,GACR,QADoB,IAAZA,MAAS,GACZ3B,KAAKqB,KAIV,OAFArB,KAAKwB,SAAU,EAERI,IAAIC,MACNC,KAAK,cAAe,CACjBC,OAAQ,CACJV,KAAMrB,KAAKqB,KAAKlB,MAEpB6B,KAAM,CACFL,YAGPM,KAAKjC,KAAKkC,aAAapD,KAAKkB,Q,EAMrCmC,SAAA,WACInC,KAAKwB,SAAU,EAEfxB,KAAK0B,YAAY1B,KAAKsB,MAAMc,QAAQH,KAAKjC,KAAKkC,aAAapD,KAAKkB,Q,EAMpEkC,aAAA,SAAaG,GAAS,MAQlB,OAPA,EAAArC,KAAKsB,OAAMgB,KAAX,QAAmBD,GAEnBrC,KAAKwB,SAAU,EACfxB,KAAKuB,cAAgBc,EAAQE,QAAQC,SAAWH,EAAQE,QAAQC,MAAMC,KAEtE/E,EAAEgF,SAEKL,G,EAMXM,UAAA,SAAUrB,GACoB,MAAtBsB,MAAMC,QAAQvB,IACd,EAAAtB,KAAKsB,OAAMwB,QAAX,QAAsBxB,GAEtBtB,KAAKsB,MAAMwB,QAAQxB,I,EAO3ByB,SAAA,WACI,OAAO/C,KAAKsB,MAAMc,OAAS,G,EAM/BY,UAAA,WACI,OAAOhD,KAAKwB,S,EAMhByB,eAAA,WACI,OAAOjD,KAAKuB,a,EAMhB2B,MAAA,WACI,OAAQlD,KAAK+C,aAAe/C,KAAKgD,a,yGC3GpBG,E,0GACjBC,OAAA,SAAOC,GAAO,WACV,YAAMD,OAAN,UAAaC,GAEbrD,KAAKsD,MAAMC,SAASC,GAAG,YAAY,WAE/B,EAAKC,EAAE,QAAQ,GAAGC,QAGlBhG,EAAEgF,YAGN1C,KAAK2D,oBAAsBN,EAAMC,MAAMK,sBAAuB,G,EAGlEC,SAAA,SAASP,GACL,YAAMO,SAAN,UAAeP,GAGVrD,KAAK2D,qBACN3D,KAAKyD,IAAII,W,EAIjBC,KAAA,WACI,IAAMC,EAAa/D,KAAKsD,MAAMC,SAASS,UACjCpC,IAAIqC,WAAWC,MAAM,mCACrBtC,IAAIqC,WAAWC,MAAM,mCAmBrBL,GAAY7D,KAAK2D,qBAAuBI,GAAe,IAE7D,OACI,EAAC,IAAD,CACII,UAAWC,IAAU,CACjB,SACA,UACA,qBACCpE,KAAK2D,sBAAwB3D,KAAKsD,MAAMC,SAASS,WAAa,gBAC9DhE,KAAK2D,sBAAwB3D,KAAKsD,MAAMC,SAASS,WAAa,eAC/DhE,KAAKsD,MAAMC,SAASS,WAAa,cAErCK,MAAOrE,KAAKsD,MAAMC,SAASS,WAAa,qBACxCM,QAAStE,KAAKuE,oBAAoBzF,KAAKkB,MACvCwE,MAAOX,EACPY,SAAUzE,KAAKsD,MAAMmB,UAEpBzE,KAAKsD,MAAMC,SAASS,WAAa,EAAC,IAAD,CAAkB/C,KAAK,OAAOkD,UAAU,0CACxEnE,KAAK2D,qBAAuB3D,KAAKsD,MAAMC,SAASS,YAAc,UAAMG,UAAU,gBAAgBJ,GAChG,cACI,WAAO/C,KAAK,OAAO0D,UAAU,EAAMC,SAAU3E,KAAK4E,QAAQ9F,KAAKkB,W,EAW/E4E,QAAA,SAAQC,GAEJ,IAAMvD,EAAQtB,KAAKyD,EAAE,SAASqB,KAAK,SAEd,IAAjBxD,EAAMc,QAOVpC,KAAKsD,MAAMC,SAASwB,OAAOzD,GAAQtB,KAAK2D,sB,EAQ5CY,oBAAA,SAAoBM,GAGhB7E,KAAKyD,EAAE,SAASuB,S,GAnGkBC,KCNrBC,E,WACjB,WAAYH,EAAQI,GAChBnF,KAAK+E,OAASA,EACd/E,KAAKmF,gBAAkBA,EAGvBnF,KAAKoF,SAAW,GAEXpF,KAAKqF,yBAIVrF,KAAKmF,gBAAgBG,iBAAiB,WAAatF,KAAKoF,SAAL,GAAmBpF,KAAA,GAAQlB,KAAKkB,OAEnFA,KAAKmF,gBAAgBG,iBAAiB,YAActF,KAAKoF,SAASG,IAAMvF,KAAKuF,IAAIzG,KAAKkB,OACtFA,KAAKmF,gBAAgBG,iBAAiB,UAAWtF,KAAKoF,SAASG,KAE/DvF,KAAKmF,gBAAgBG,iBAAiB,OAAStF,KAAKoF,SAASI,SAAWxF,KAAKwF,SAAS1G,KAAKkB,Q,2BAG/FqF,qBAAA,WAEI,IAAMI,EAAMC,SAASC,cAAc,OAEnC,OAAQ,cAAeF,GAAQ,gBAAiBA,GAAO,WAAYA,IAAS,aAAcG,QAAU,eAAgBA,Q,EAGxHC,OAAA,WAES7F,KAAKoF,SAAL,KAILpF,KAAKmF,gBAAgBW,oBAAoB,WAAY9F,KAAKoF,SAAL,IAErDpF,KAAKmF,gBAAgBW,oBAAoB,YAAa9F,KAAKoF,SAASG,KACpEvF,KAAKmF,gBAAgBW,oBAAoB,UAAW9F,KAAKoF,SAASG,KAElEvF,KAAKmF,gBAAgBW,oBAAoB,OAAQ9F,KAAKoF,SAASI,Y,EAGnEO,UAAA,SAAUC,GAGN,GAAIA,EAAMC,aAAaC,MACnB,IAAK,IAAI5I,EAAI,EAAGA,EAAI0I,EAAMC,aAAaC,MAAM9D,OAAQ9E,IACjD,GAAyC,SAArC0I,EAAMC,aAAaC,MAAM5I,GAAG6I,KAC5B,OAAO,EAKnB,OAAO,G,KAGX,SAAGH,GACKhG,KAAK+F,UAAUC,KAInBA,EAAMI,iBAEDpG,KAAKqG,OACNrG,KAAKmF,gBAAgBf,UAAUkC,IAAI,uBACnCtG,KAAKqG,MAAO,K,EAIpBd,IAAA,SAAIS,GACIhG,KAAK+F,UAAUC,KAInBA,EAAMI,iBAEFpG,KAAKqG,OACLrG,KAAKmF,gBAAgBf,UAAUmC,OAAO,uBACtCvG,KAAKqG,MAAO,K,EAIpBb,SAAA,SAASQ,GACDhG,KAAK+F,UAAUC,KAInBA,EAAMI,iBAENpG,KAAK+E,OAAOiB,EAAMC,aAAa3E,OAE/BtB,KAAKmF,gBAAgBf,UAAUmC,OAAO,yB,KC1FzBC,E,WACjB,WAAYzB,EAAQ0B,GAChBzG,KAAK+E,OAASA,EAGd0B,EAAQnB,iBAAiB,QAAStF,KAAK0G,MAAM5H,KAAKkB,O,mBAGtD0G,MAAA,SAAM7B,GACF,GAAIA,EAAE8B,eAAiB9B,EAAE8B,cAAcT,MAAO,CAK1C,IAJA,IAAMA,EAAQrB,EAAE8B,cAAcT,MAExB5E,EAAQ,GAELhE,EAAI,EAAGA,EAAI4I,EAAM9D,OAAQ9E,KACU,IAApC4I,EAAM5I,GAAG0D,KAAK4F,QAAQ,UACtBtF,EAAMgB,KAAK4D,EAAM5I,GAAGuJ,aAIxBvF,EAAMc,OAAS,IACfyC,EAAEuB,iBAEFpG,KAAK+E,OAAOzD,M,KCrBPwF,E,WACjB,aACI9G,KAAK+G,UAAY,CACbC,QAAS,GACTC,QAAS,GACTjD,UAAW,GACXkD,SAAU,IAEdlH,KAAKgE,WAAY,E,2BAGrBR,GAAA,SAAGxC,EAAMmG,GACLnH,KAAK+G,UAAU/F,GAAMsB,KAAK6E,I,EAG9BC,SAAA,SAASpG,EAAMqG,GACXrH,KAAK+G,UAAU/F,GAAMsG,SAAQ,SAACH,GAAD,OAAcA,EAASE,O,EAGxDtC,OAAA,SAAOzD,EAAOiG,GAAkB,oBAAlBA,OAAY,GACtBvH,KAAKgE,WAAY,EACjBhE,KAAKoH,SAAS,YAAa9F,GAE3B5D,EAAEgF,SAIF,IAFA,IAAM8E,EAAO,IAAIC,SAERnK,EAAI,EAAGA,EAAIgE,EAAMc,OAAQ9E,IAC9BkK,EAAKE,OAAO,UAAWpG,EAAMhE,IAIjC,OAAOsE,IACF+F,QAAQ,CACLC,OAAQ,OACRlH,IAAKkB,IAAIiG,MAAM/G,UAAU,UAAY,cAErCgH,UAAW,SAACC,GAAD,OAASA,GACpBP,SAEHvF,MAAK,SAAC+F,GAAD,OAAY,EAAKd,SAASc,EAAQT,MARrC,OASI,SAACU,GAIJ,MAHA,EAAKjE,WAAY,EACjBtG,EAAEgF,SAEIuF,M,EAIlBf,SAAA,SAASc,EAAQT,GAAmB,oBAAnBA,OAAY,GACzBvH,KAAKgE,WAAY,EAEjBgE,EAAO9H,KAAKoH,SAAQ,SAACjH,GACjB,IAAM6H,EAAUtG,IAAIC,MAAMsG,WAAW9H,GAGrCuB,IAAIwG,cAAczF,UAAUuF,GAG5B,EAAKd,SAAS,UAAW,CACrB/G,KAAM6H,EACNX,iBAIRvH,KAAKoH,SAAS,a,uDCnEhBiB,EAAQ,CAAC,YAAa,YAAa,aAAc,gBAAiB,aAClEC,EAAU,CAAC,kBAAmB,8BAA+B,mBAAoB,sBAAuB,gCACxGC,EAAO,CAAC,YAAa,WAAY,kBAAmB,mBAAoB,sBAAuB,kBAAmB,2BAClHC,EAAO,CACT,wBACA,qBACA,0EACA,mB,ICIiBC,E,0GACjBrF,OAAA,SAAOC,GACH,YAAMD,OAAN,UAAaC,GAGbzB,IAAIwG,cAAc3G,QAAQ4B,EAAMC,MAAMjC,MAAQO,IAAI8G,QAAQrH,MAE1DrB,KAAK2I,QAAUtF,EAAMC,MAAMsF,WAC3B5I,KAAK6I,iBAAmBxF,EAAMC,MAAMuF,kBAAoB,KACxD7I,KAAK8I,gBAAkB9I,KAAKsD,MAAMwF,kBAAmB,EAIrD9I,KAAK+I,iBAAmB,GAKxB/I,KAAKqB,KAAOO,IAAIwG,cAAc/G,M,EAGlCyC,KAAA,WAAO,WAIGkF,EAAQpH,IAAIwG,cAElB,OACI,SAAKjE,UAAU,uBAAuB8E,YAAU,UAE3CD,EAAMhG,aAAsC,IAAvBgG,EAAM1H,MAAMc,QAC9B,SAAK+B,UAAW,sBACXvC,IAAIqC,WAAWC,MAAM,sCAEtB,EAAC,IAAD,OAKPlE,KAAK2I,SAAWK,EAAM9F,SACnB,OAAGiB,UAAU,oBACT,OAAGA,UAAU,kDAEZvC,IAAIqC,WAAWC,MAAf,2CAAgF,UAAjBtC,IAAIsH,SAAuB,UAAY,YAK7GlJ,KAAK2I,SAAWK,EAAM9F,SAAW,OAAGiB,UAAU,oBAAoBvC,IAAIqC,WAAWC,MAAM,qCAGzF,YACK8E,EAAM1H,MAAM6H,KAAI,SAAC9I,GACd,ID9CW+I,EC8CLC,GD9CKD,EC8CiB/I,EAAKW,OD5CjDqH,EAAMiB,SAASF,GACR,QAGFA,EAASE,SAAS,UAChB,oBAGFF,EAASE,SAAS,UAChB,oBAGFhB,EAAQ1B,QAAQwC,IAAa,EAC3B,sBAGW,oBAAbA,EACE,kBAGFZ,EAAK5B,QAAQwC,IAAa,EACxB,mBAGFA,EAASE,SAAS,UAChB,oBAGFf,EAAK3B,QAAQwC,IAAa,EACxB,mBAGJ,eCamBG,GAAiB,EAAKV,kBAAmB,EAAKW,aAAanJ,GAE3DoJ,EAAiBrF,IAAU,CAC7B,WAEa,UAAbiF,GAAwB,sBAExB,EAAK/F,MAAMoG,eAAiB,EAAKpG,MAAMoG,cAAc9C,QAAQvG,EAAKF,OAAS,GAAK,sBAO9EwJ,EAAWtJ,EAAKI,WAEhBmJ,EAAe,EAAKb,iBAAiBO,SAASjJ,EAAKE,QAEzD,OACI,QAAIsJ,YAAWD,GACVhI,IAAI8G,QAAQrH,OAAS,EAAKA,OAASO,IAAI8G,QAAQrH,MAAQO,IAAI8G,QAAQrH,KAAKyI,6BACrE,EAAC,IAAD,CACI3F,UAAU,sCACVE,KAAK,mBACL0F,aAAYnI,IAAIqC,WAAWC,MAAM,oDAAqD,CAAEyF,aACxFlF,SAAUmF,EACVtF,QAAS,EAAK0F,SAASlL,KAAK,EAAMuB,KAI1C,YACI8D,UAAWsF,EACXnF,QAAS,kBAAM,EAAK2F,YAAY5J,IAChCoE,UAAW8E,GAAkBK,EAC7BG,aAAYG,IAAYtI,IAAIqC,WAAWC,MAAM,oDAAqD,CAAEyF,eAEpG,gBACkB,UAAbN,EACG,SACIc,IAAK9J,EAAKK,MACVyD,UAAU,yBACViG,WAAW,EAOXC,IAAI,KAGR,UACIlG,UAAU,gBAOVmG,KAAK,gBAEL,OAAGnG,UAAS,SAAWkF,KAI/B,gBAAYlF,UAAU,iBAAiBwF,GAEtCC,GACG,UACIW,MAAM,mBACND,KAAK,SACLP,aAAYnI,IAAIqC,WAAWC,MAAM,iDAEjC,EAAC,IAAD,cAW/B8E,EAAM/F,kBACH,SAAKkB,UAAW,uBACZ,EAAC,IAAD,CACIA,UAAW,yBACXM,SAAUuE,EAAMhG,YAChBxB,QAASwH,EAAMhG,YACfsB,QAAS,kBAAM0E,EAAM7G,aAEpBP,IAAIqC,WAAWC,MAAM,sD,EAa9C+F,YAAA,SAAY5J,GAEJL,KAAKsD,MAAMkH,aACXxK,KAAKsD,MAAMkH,aAAanK,GAKxBL,KAAKsD,MAAMwF,iBACXlD,OAAO6E,KAAKpK,EAAKK,Q,EAUzB8I,aAAA,SAAanJ,GACT,IAAM+I,EAAW/I,EAAKW,OAGtB,OAAI4B,MAAMC,QAAQ7C,KAAK6I,kBACZ7I,KAAK6I,iBAAiBjC,QAAQwC,IAAa,EAInB,UAA1BpJ,KAAK6I,iBACHO,EAASE,SAAS,UAIM,UAA1BtJ,KAAK6I,iBACHO,EAASE,SAAS,UAIM,UAA1BtJ,KAAK6I,kBACHO,EAASE,SAAS,W,EAcjCU,SAAA,SAAS3J,GAAM,WAILE,EAAOF,EAAKE,OAElB,IAAIP,KAAK+I,iBAAiBO,SAAS/I,GAQnC,GANAP,KAAK+I,iBAAiBzG,KAAK/B,GAEPmK,QAChBR,IAAYtI,IAAIqC,WAAWC,MAAM,yDAA0D,CAAEyF,SAAUtJ,EAAKI,eAI5GmB,IAAI+F,QAAQ,CACRC,OAAQ,QACRlH,IAAQkB,IAAIiG,MAAM/G,UAAU,UAAzB,mBACH0G,KAAM,CAAEjH,UAEP0B,MAAK,WACFL,IAAI+I,OAAOC,KAAKC,IAAO,CAAE7J,KAAM,WAAaY,IAAIqC,WAAWC,MAAM,yDANzE,OAQW,WACHtC,IAAI+I,OAAOC,KACPC,IACA,CAAE7J,KAAM,SACRY,IAAIqC,WAAWC,MAAM,iDAAkD,CAAEyF,SAAUtJ,EAAKsJ,iBAG/F1H,MAAK,WAKF,IAAM+G,EAAQpH,IAAIwG,cAEZ0C,EAAQ9B,EAAM1H,MAAMyJ,WAAU,SAAC1K,GAAD,OAAUE,IAASF,EAAKE,UAC5DyI,EAAM1H,MAAM0J,OAAOF,EAAO,GAG1B,IAAMxN,EAAI,EAAKyL,iBAAiBnC,QAAQrG,GACxC,EAAKwI,iBAAiBiC,OAAO1N,EAAG,UAErC,CAEH,IAAMA,EAAI0C,KAAK+I,iBAAiBnC,QAAQrG,GACxCP,KAAK+I,iBAAiBiC,OAAO1N,EAAG,K,GAnQF2H,KCLrBgG,E,0GACjB7H,OAAA,SAAOC,GACH,YAAMD,OAAN,UAAaC,GAGbrD,KAAKuD,SAAWF,EAAMC,MAAMC,SAG5BvD,KAAK0J,cAAgB,GAGrB1J,KAAKkL,YAAc7H,EAAMC,MAAM4H,cAAe,EAG9ClL,KAAK6I,iBAAmBxF,EAAMC,MAAMuF,kBAAoB,KAGxD7I,KAAKmL,SAAW,KAGhBnL,KAAKoL,Y,EAGTjH,UAAA,WACI,MAAO,uC,EAMXP,SAAA,SAASP,GAAO,WACZ,YAAMO,SAAN,UAAeP,GAEfrD,KAAKmL,SAAW,IAAIjG,GAAY,SAAC5D,GAAD,OAAW,EAAKiC,SAASwB,OAAOzD,GAAO,KAAQtB,KAAKyD,IAAI3B,KAAK,kBAAkB,K,EAMnHuJ,SAAA,WACQrL,KAAKmL,UACLnL,KAAKmL,SAAStF,U,EAItB/B,KAAA,WACI,OACI,SAAKK,UAAS,sBAAwBnE,KAAKmE,aACvC,SAAKA,UAAU,iBACX,SAAKA,UAAU,qCACX,EAAC,EAAD,CAAcZ,SAAUvD,KAAKuD,SAAUkB,SAAU7C,IAAIwG,cAAcpF,YAAaW,qBAAmB,KAGvG,SAAKQ,UAAU,qBACX,SAAKA,UAAU,6BACX,OAAGA,UAAU,4BAEZvC,IAAIqC,WAAWC,MAAM,kDAI9B,SAAKC,UAAU,gBACX,QAAIA,UAAU,2CAA2CvC,IAAIqC,WAAWC,MAAM,oCAGjFlE,KAAKsL,YACF,SAAKnH,UAAU,eACX,EAAC0G,MAAU7K,KAAKsL,aAIxB,SAAKnH,UAAU,cACX,EAAC,EAAD,CACI9C,KAAMrB,KAAKsD,MAAMjC,KACjBuH,YAAU,EACV4B,aAAcxK,KAAKwK,aAAa1L,KAAKkB,MACrC0J,cAAe1J,KAAK0J,cACpBb,iBAAkB7I,KAAK6I,oBAI/B,SAAK1E,UAAU,gBACX,EAAC,IAAD,CAAQG,QAAStE,KAAKuL,KAAKzM,KAAKkB,MAAOmE,UAAU,UAC5CvC,IAAIqC,WAAWC,MAAM,oCAG1B,EAAC,IAAD,CACII,QAAStE,KAAKwL,SAAS1M,KAAKkB,MAC5ByE,SAAwC,IAA9BzE,KAAK0J,cAActH,SAAkBpC,KAAKkL,aAAelL,KAAK0J,cAActH,OAAS,EAC/F+B,UAAU,0BAETvC,IAAIqC,WAAWwH,YAAY,mDAAoDzL,KAAK0J,cAActH,a,EAa3HoI,aAAA,SAAanK,GACT,IAAMqL,EAAe1L,KAAK0J,cAAc9C,QAAQvG,EAAKF,MAEjDuL,GAAgB,EAChB1L,KAAK0J,cAAcsB,OAAOU,EAAc,GAEpC1L,KAAKkL,YACLlL,KAAK0J,cAAcpH,KAAKjC,EAAKF,MAE7BH,KAAK0J,cAAgB,CAACrJ,EAAKF,O,EAQvCiL,SAAA,WAAW,WACPpL,KAAKuD,SAASC,GAAG,WAAW,YAAc,IAAXnD,EAAW,EAAXA,KACvB,EAAK6K,YACL,EAAKxB,cAAcpH,KAAKjC,EAAKF,MAE7B,EAAKuJ,cAAgB,CAACrJ,EAAKF,U,EAQvCqL,SAAA,WACIxL,KAAKuL,OAGDvL,KAAKsD,MAAMkI,SACXxL,KAAKsD,MAAMkI,SAASxL,KAAK0J,eAM7B1J,KAAK0J,cAAcP,KAAI,SAACwC,GACpB,IAAMtL,EAAOuB,IAAIC,MAAM+J,QAAQ,QAASD,GAExC/J,IAAIiK,SAASC,OAAOC,eAAe1L,EAAKD,SAAW,U,GApJjB4L,KCDzBC,E,0GACjBnI,KAAA,WACI,OAAOoI,IAAOC,UAAU,CACpBhI,UAAW,wCACXG,QAAStE,KAAKoM,yBAAyBtN,KAAKkB,MAC5CqE,KAAM,qBACNG,MAAO5C,IAAIqC,WAAWC,MAAM,qC,EASpCN,SAAA,SAASP,GACL,YAAMO,SAAN,UAAeP,GAGfrD,KAAKyD,IAAII,W,EAQbuI,yBAAA,SAAyBvH,GACrBA,EAAEuB,iBAGFxE,IAAIyK,MAAMzB,KAAKK,EAAkB,CAC7B1H,SAAUvD,KAAKsD,MAAMC,Y,GAhCc0B,KCF1BqH,E,0GACjBlJ,OAAA,SAAOC,GACH,YAAMD,OAAN,UAAaC,GAEbrD,KAAKqB,KAAO,KAEZrB,KAAKuM,SAAS7O,EAAE8O,MAAMC,MAAM,c,EAGhCC,QAAA,WACI,OAAI9K,IAAI8G,QAAQrH,OAASO,IAAI8G,QAAQrH,KAAKsL,0BAA4B3M,KAAKqB,OAASO,IAAI8G,QAAQrH,MAExFrB,KAAKqB,MACLoH,EAAa0D,UAAU,CACnB9K,KAAMrB,KAAKqB,KACXuH,YAAY,EACZE,iBAAiB,IAIlB,M,EAIf8B,KAAA,SAAKvJ,GACD,YAAMuJ,KAAN,UAAWvJ,GACXrB,KAAKqB,KAAOA,G,GA1ByBuL,K,iBCGhCC,EAAa,CACtB3H,cACA+G,oBACAhB,mBACAxC,eACA3B,YCIJlF,IAAIkL,aAAaxG,IAAI,cAAc,WAC/ByG,IAAK7N,UAAUyN,uBAAyB9L,IAAMC,UAAU,qCACxDiM,IAAK7N,UAAU4K,yBAA2BjJ,IAAMC,UAAU,uCCP1DkM,iBAAOC,IAAW/N,UAAW,UAAU,WACnCc,KAAKuD,SAAW,IAAIuD,KAExBkG,iBAAOC,IAAW/N,UAAW,gBAAgB,SAAUgH,GACnD,GAAKtE,IAAIiG,MAAM/G,UAAU,wBAAzB,CAEA,IAAMoM,EAA0BtL,IAAIiG,MAAM/G,UAAU,sCAGpB,SAA5BoM,GAAkE,cAA5BA,GACtChH,EAAMI,IACF,mBACA2F,EAAkBE,UAAU,CACxB5I,SAAUvD,KAAKuD,YAMK,SAA5B2J,GAAkE,eAA5BA,GACtChH,EAAMI,IACF,aACAnD,EAAagJ,UAAU,CACnB5I,SAAUvD,KAAKuD,gBAM/ByJ,iBAAOC,IAAW/N,UAAW,YAAY,SAAUiO,EAAI9J,GAAO,WACrDzB,IAAIiG,MAAM/G,UAAU,0BAEzBd,KAAKuD,SAASC,GAAG,WAAW,YAAyB,IAAtBnD,EAAsB,EAAtBA,KAC3B,GADiD,EAAhBkH,YAGjC,EAAKjE,MAAMuI,SAASC,OAAOC,eAAe1L,EAAKD,SAAW,MAKxB,mBAAvB,EAAKkD,MAAM8J,SAAwB,CAI1C,IAAMC,EAAuBzL,IAAIiK,SAASyB,aAE1C1L,IAAIiK,SAASyB,aAAe,kBAAM,GAElC,EAAKhK,MAAM8J,UAEXxL,IAAIiK,SAASyB,aAAeD,MAIpCrN,KAAKuN,YAAc,IAAIrI,GAAY,SAAC5D,GAAD,OAAW,EAAKiC,SAASwB,OAAOzD,KAAQtB,KAAKyD,IAAI+J,QAAQ,aAAa,IAEzG,IAAIhH,GAAe,SAAClF,GAAD,OAAW,EAAKiC,SAASwB,OAAOzD,KAAQtB,KAAKyD,EAAE,sBAAsB,QAG5FuJ,iBAAOC,IAAW/N,UAAW,YAAY,SAAUiO,EAAI9J,GAC9CzB,IAAIiG,MAAM/G,UAAU,yBAEzBd,KAAKuN,YAAY1H,YCjErBmH,iBAAOS,IAAKvO,UAAW,YAAY,WAAY,WAC3Cc,KAAKyD,EAAE,mCACFiK,OAAO,SACPlK,GAAG,SAAS,SAACqB,GAIV,GAHAA,EAAEuB,iBACFvB,EAAE8I,kBAEG/L,IAAIiG,MAAM/G,UAAU,0BAAzB,CAKA,IAAIJ,EAAMkB,IAAIiG,MAAM/G,UAAU,UAAY,gBAE1CJ,GAAO,IAAMmE,EAAE+I,cAAcC,QAAQC,sBACrCpN,GAAO,IAAM,EAAK4C,MAAMyK,KAAK5N,KAC7BO,GAAO,IAAMkB,IAAI8G,QAAQsF,UAEzBpI,OAAO6E,KAAK/J,QAVRuN,MAAMrM,IAAIqC,WAAWC,MAAM,+CFQ3CtC,IAAIC,MAAMqM,OAAO5M,MAAQxB,EAGzB8B,IAAIwG,cAAgB,IAAIhH,EAGxBQ,IAAIuM,OAAO,gBAAkB,CACzBpN,KAAM,uBACNoL,UAAWG,GAIfU,iBAAOJ,IAAS1N,UAAW,YAAY,SAAUgH,GACzCtE,IAAI8G,QAAQrH,OAASO,IAAI8G,QAAQrH,KAAKsL,0BAA4B3M,KAAKqB,OAASO,IAAI8G,QAAQrH,OAC5F6E,EAAMI,IACF,UACA8H,IAAWjC,UACP,CACIkC,KAAMzM,IAAI4K,MAAM,eAAgB,CAC5B8B,SAAUtO,KAAKqB,KAAKiN,aAExBzQ,KAAM,UACNwG,KAAM,sBAEVrE,KAAKqB,OAASO,IAAI8G,QAAQrH,KACpBO,IAAIqC,WAAWC,MAAM,kCACrBtC,IAAIqC,WAAWC,MAAM,0CAE/B","file":"forum.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 25);\n","module.exports = flarum.core.compat['common/app'];","export default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}","module.exports = flarum.core.compat['common/components/Button'];","module.exports = flarum.core.compat['common/Model'];","module.exports = flarum.core.compat['common/extend'];","module.exports = flarum.core.compat['common/Component'];","module.exports = flarum.core.compat['common/components/Alert'];","module.exports = flarum.core.compat['common/components/LoadingIndicator'];","module.exports = flarum.core.compat['common/components/TextEditor'];","module.exports = flarum.core.compat['forum/components/UserPage'];","module.exports = flarum.core.compat['common/utils/classList'];","module.exports = flarum.core.compat['common/utils/extractText'];","module.exports = flarum.core.compat['common/models/User'];","module.exports = flarum.core.compat['common/components/LinkButton'];","module.exports = flarum.core.compat['common/utils/mixin'];","module.exports = flarum.core.compat['forum/components/Post'];","module.exports = flarum.core.compat['common/components/Modal'];","import Model from 'flarum/common/Model';\nimport mixin from 'flarum/common/utils/mixin';\nimport fileToBBcode from '../fileToBBcode';\n\nexport default class File extends mixin(Model, {\n    baseName: Model.attribute('baseName'),\n    path: Model.attribute('path'),\n    url: Model.attribute('url'),\n    type: Model.attribute('type'),\n    size: Model.attribute('size'),\n    humanSize: Model.attribute('humanSize'),\n    createdAt: Model.attribute('createdAt'),\n    uuid: Model.attribute('uuid'),\n    tag: Model.attribute('tag'),\n    hidden: Model.attribute('hidden'),\n}) {\n    /**\n     * Use FoF Uploads endpoint\n     */\n    apiEndpoint() {\n        return '/fof/uploads' + (this.exists ? '/' + this.data.id : '');\n    }\n\n    /**\n     * Generate bbcode for this file\n     */\n    bbcode() {\n        return fileToBBcode(this);\n    }\n}\n","export default function fileToBBcode(file) {\n    switch (file.tag()) {\n        // File\n        case 'file':\n            return `[upl-file uuid=${file.uuid()} size=${file.humanSize()}]${file.baseName()}[/upl-file]`;\n\n        // Image template\n        case 'image':\n            return `[upl-image uuid=${file.uuid()} size=${file.humanSize()} url=${file.url()}]${file.baseName()}[/upl-image]`;\n\n        // Image preview\n        case 'image-preview':\n            return `[upl-image-preview url=${file.url()}]`;\n\n        // 'just-url' or unknown\n        default:\n            return file.url();\n    }\n}\n","import app from 'flarum/common/app';\n\nexport default class FileListState {\n    constructor() {\n        this.user = null;\n\n        this.files = [];\n\n        this.moreResults = false;\n\n        this.loading = false;\n    }\n\n    /**\n     * Set user and load list\n     *\n     * @param user A user to populate the media manager\n     */\n    setUser(user) {\n        // Keep previous state\n        if (user === this.user) return;\n\n        // Set user\n        this.user = user;\n\n        // Reset file list\n        this.files = [];\n\n        // Load user files\n        this.loadResults();\n    }\n\n    /**\n     * Load more user files\n     *\n     * @param offset The index to start the page at.\n     */\n    loadResults(offset = 0) {\n        if (!this.user) return;\n\n        this.loading = true;\n\n        return app.store\n            .find('fof/uploads', {\n                filter: {\n                    user: this.user.id(),\n                },\n                page: {\n                    offset,\n                },\n            })\n            .then(this.parseResults.bind(this));\n    }\n\n    /**\n     * Load the next page of discussion results.\n     */\n    loadMore() {\n        this.loading = true;\n\n        this.loadResults(this.files.length).then(this.parseResults.bind(this));\n    }\n\n    /**\n     * Parse results and append them to the file list.\n     */\n    parseResults(results) {\n        this.files.push(...results);\n\n        this.loading = false;\n        this.moreResults = !!results.payload.links && !!results.payload.links.next;\n\n        m.redraw();\n\n        return results;\n    }\n\n    /**\n     * Add files to the beginning of the list\n     */\n    addToList(files) {\n        if (Array.isArray(files)) {\n            this.files.unshift(...files);\n        } else {\n            this.files.unshift(files);\n        }\n    }\n\n    /**\n     * Are there any files in the list?\n     */\n    hasFiles() {\n        return this.files.length > 0;\n    }\n\n    /**\n     * Is the file list loading?\n     */\n    isLoading() {\n        return this.loading;\n    }\n\n    /**\n     * Does this user has more files?\n     */\n    hasMoreResults() {\n        return this.moreResults;\n    }\n\n    /**\n     * Does this user have any files?\n     */\n    empty() {\n        return !this.hasFiles() && !this.isLoading();\n    }\n}\n","import app from 'flarum/common/app';\nimport Component from 'flarum/common/Component';\nimport Button from 'flarum/common/components/Button';\nimport LoadingIndicator from 'flarum/common/components/LoadingIndicator';\nimport classList from 'flarum/common/utils/classList';\n\nexport default class UploadButton extends Component {\n    oninit(vnode) {\n        super.oninit(vnode);\n\n        this.attrs.uploader.on('uploaded', () => {\n            // reset the button for a new upload\n            this.$('form')[0].reset();\n\n            // redraw to reflect uploader.loading in the DOM\n            m.redraw();\n        });\n\n        this.isMediaUploadButton = vnode.attrs.isMediaUploadButton || false;\n    }\n\n    oncreate(vnode) {\n        super.oncreate(vnode);\n\n        // Add tooltip\n        if (!this.isMediaUploadButton) {\n            this.$().tooltip();\n        }\n    }\n\n    view() {\n        const buttonText = this.attrs.uploader.uploading\n            ? app.translator.trans('fof-upload.forum.states.loading')\n            : app.translator.trans('fof-upload.forum.buttons.upload');\n\n        /**\n         * Flarum core has decided that all buttons should have tooltips, but\n         * it uses `extractText` to get a title attr when none is provided.\n         *\n         * That returns `false` when no text is available, like the icon in a\n         * button.\n         *\n         * This means that it starts creating weird tooltips, such as `falsefalse`\n         * and `falseUpload`.\n         *\n         * To override this behaviour, we pass `\" \"` when no tooltip is desired.\n         * Using `\"\"` won't work as JS interprets this as a falsey value which will\n         * trigger the core logic.\n         *\n         * Thankfully, browsers ignore title attributes made of only whitespace,\n         * preventing a ghost-like tooltip.\n         */\n        const tooltip = (!this.isMediaUploadButton && buttonText) || ' ';\n\n        return (\n            <Button\n                className={classList([\n                    'Button',\n                    'hasIcon',\n                    'fof-upload-button',\n                    !this.isMediaUploadButton && !this.attrs.uploader.uploading && 'Button--icon',\n                    !this.isMediaUploadButton && !this.attrs.uploader.uploading && 'Button--link',\n                    this.attrs.uploader.uploading && 'uploading',\n                ])}\n                icon={!this.attrs.uploader.uploading && 'fas fa-file-upload'}\n                onclick={this.uploadButtonClicked.bind(this)}\n                title={tooltip}\n                disabled={this.attrs.disabled}\n            >\n                {this.attrs.uploader.uploading && <LoadingIndicator size=\"tiny\" className=\"LoadingIndicator--inline Button-icon\" />}\n                {(this.isMediaUploadButton || this.attrs.uploader.uploading) && <span className=\"Button-label\">{buttonText}</span>}\n                <form>\n                    <input type=\"file\" multiple={true} onchange={this.process.bind(this)} />\n                </form>\n            </Button>\n        );\n    }\n\n    /**\n     * Process the upload event.\n     *\n     * @param e\n     */\n    process(e) {\n        // get the file from the input field\n        const files = this.$('input').prop('files');\n\n        if (files.length === 0) {\n            // We've got no files to upload, so trying\n            // to begin an upload will show an error\n            // to the user.\n            return;\n        }\n\n        this.attrs.uploader.upload(files, !this.isMediaUploadButton);\n    }\n\n    /**\n     * Event handler for upload button being clicked\n     *\n     * @param {PointerEvent} e\n     */\n    uploadButtonClicked(e) {\n        // Trigger click on hidden input element\n        // (Opens file dialog)\n        this.$('input').click();\n    }\n}\n","export default class DragAndDrop {\n    constructor(upload, composerElement) {\n        this.upload = upload;\n        this.composerElement = composerElement;\n\n        // Keep references to the bound methods so we can remove the event listeners later\n        this.handlers = {};\n\n        if (!this.supportsFileDragging()) {\n            return;\n        }\n\n        this.composerElement.addEventListener('dragover', (this.handlers.in = this.in.bind(this)));\n\n        this.composerElement.addEventListener('dragleave', (this.handlers.out = this.out.bind(this)));\n        this.composerElement.addEventListener('dragend', this.handlers.out);\n\n        this.composerElement.addEventListener('drop', (this.handlers.dropping = this.dropping.bind(this)));\n    }\n\n    supportsFileDragging() {\n        // Based on https://css-tricks.com/drag-and-drop-file-uploading/\n        const div = document.createElement('div');\n\n        return ('draggable' in div || ('ondragstart' in div && 'ondrop' in div)) && 'FormData' in window && 'FileReader' in window;\n    }\n\n    unload() {\n        // If the handlers were not set (drag and drop not supported), we skip removing them\n        if (!this.handlers.in) {\n            return;\n        }\n\n        this.composerElement.removeEventListener('dragover', this.handlers.in);\n\n        this.composerElement.removeEventListener('dragleave', this.handlers.out);\n        this.composerElement.removeEventListener('dragend', this.handlers.out);\n\n        this.composerElement.removeEventListener('drop', this.handlers.dropping);\n    }\n\n    isNotFile(event) {\n        // Checking event.dataTransfer.files.length does not work on dragover event, it's always zero\n        // So we use the dataTransfer.items property to check whether any file is being dragged\n        if (event.dataTransfer.items) {\n            for (let i = 0; i < event.dataTransfer.items.length; i++) {\n                if (event.dataTransfer.items[i].kind !== 'file') {\n                    return true;\n                }\n            }\n        }\n\n        return false;\n    }\n\n    in(event) {\n        if (this.isNotFile(event)) {\n            return;\n        }\n\n        event.preventDefault();\n\n        if (!this.over) {\n            this.composerElement.classList.add('fof-upload-dragging');\n            this.over = true;\n        }\n    }\n\n    out(event) {\n        if (this.isNotFile(event)) {\n            return;\n        }\n\n        event.preventDefault();\n\n        if (this.over) {\n            this.composerElement.classList.remove('fof-upload-dragging');\n            this.over = false;\n        }\n    }\n\n    dropping(event) {\n        if (this.isNotFile(event)) {\n            return;\n        }\n\n        event.preventDefault();\n\n        this.upload(event.dataTransfer.files);\n\n        this.composerElement.classList.remove('fof-upload-dragging');\n    }\n}\n","export default class PasteClipboard {\n    constructor(upload, element) {\n        this.upload = upload;\n\n        // We don't need to remove the events listeners, because they'll get removed when the DOM does.\n        element.addEventListener('paste', this.paste.bind(this));\n    }\n\n    paste(e) {\n        if (e.clipboardData && e.clipboardData.items) {\n            const items = e.clipboardData.items;\n\n            const files = [];\n\n            for (let i = 0; i < items.length; i++) {\n                if (items[i].type.indexOf('image') !== -1) {\n                    files.push(items[i].getAsFile());\n                }\n            }\n\n            if (files.length > 0) {\n                e.preventDefault();\n\n                this.upload(files);\n            }\n        }\n    }\n}\n","import app from 'flarum/common/app';\n\nexport default class Uploader {\n    constructor() {\n        this.callbacks = {\n            success: [],\n            failure: [],\n            uploading: [],\n            uploaded: [],\n        };\n        this.uploading = false;\n    }\n\n    on(type, callback) {\n        this.callbacks[type].push(callback);\n    }\n\n    dispatch(type, response) {\n        this.callbacks[type].forEach((callback) => callback(response));\n    }\n\n    upload(files, addBBcode = true) {\n        this.uploading = true;\n        this.dispatch('uploading', files);\n\n        m.redraw(); // Forcing a redraw so that the button also updates if uploadFiles() is called from DragAndDrop or PasteClipboard\n\n        const body = new FormData();\n\n        for (let i = 0; i < files.length; i++) {\n            body.append('files[]', files[i]);\n        }\n\n        // send a POST request to the api\n        return app\n            .request({\n                method: 'POST',\n                url: app.forum.attribute('apiUrl') + '/fof/upload',\n                // prevent JSON.stringify'ing the form data in the XHR call\n                serialize: (raw) => raw,\n                body,\n            })\n            .then((result) => this.uploaded(result, addBBcode))\n            .catch((error) => {\n                this.uploading = false;\n                m.redraw();\n\n                throw error;\n            });\n    }\n\n    uploaded(result, addBBcode = false) {\n        this.uploading = false;\n\n        result.data.forEach((file) => {\n            const fileObj = app.store.pushObject(file);\n\n            // Add file to media manager\n            app.fileListState.addToList(fileObj);\n\n            // Dispatch\n            this.dispatch('success', {\n                file: fileObj,\n                addBBcode,\n            });\n        });\n\n        this.dispatch('uploaded');\n    }\n}\n","const image = ['image/png', 'image/jpg', 'image/jpeg', 'image/svg+xml', 'image/gif'];\nconst archive = ['application/zip', 'application/x-7z-compressed', 'application/gzip', 'application/vnd.rar', 'application/x-rar-compressed'];\nconst code = ['text/html', 'text/css', 'text/javascript', 'application/json', 'application/ld+json', 'text/javascript', 'application/x-httpd-php'];\nconst word = [\n    'application/x-abiword',\n    'application/msword',\n    'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\n    'application/pdf',\n];\n\n/**\n * Returns a FontAwesome icon class for a specified MIME type.\n *\n * If it's a known image type, it returns `image` instead.\n *\n * @param {string} fileType MIME type\n * @returns {string} Icon for MIME type\n */\nexport default function mimeToIcon(fileType) {\n    // Display image (do not display for)\n    if (image.includes(fileType)) {\n        return 'image';\n    }\n    // Display image icon for other types\n    else if (fileType.includes('image/')) {\n        return 'far fa-file-image';\n    }\n    // Video icon\n    else if (fileType.includes('video/')) {\n        return 'far fa-file-video';\n    }\n    // Archive icon\n    else if (archive.indexOf(fileType) >= 0) {\n        return 'far fa-file-archive';\n    }\n    // PDF icon\n    else if (fileType === 'application/pdf') {\n        return 'far fa-file-pdf';\n    }\n    // Word\n    else if (word.indexOf(fileType) >= 0) {\n        return 'far fa-file-word';\n    }\n    // Audio icon\n    else if (fileType.includes('audio/')) {\n        return 'far fa-file-audio';\n    }\n    // Code files\n    else if (code.indexOf(fileType) >= 0) {\n        return 'far fa-file-code';\n    }\n\n    return 'far fa-file';\n}\n","import Component from 'flarum/common/Component';\n\nimport Button from 'flarum/common/components/Button';\nimport Alert from 'flarum/common/components/Alert';\nimport LoadingIndicator from 'flarum/common/components/LoadingIndicator';\n\nimport classList from 'flarum/common/utils/classList';\nimport extractText from 'flarum/common/utils/extractText';\n\nimport mimeToIcon from '../../common/mimeToIcon';\n\nexport default class UserFileList extends Component {\n    oninit(vnode) {\n        super.oninit(vnode);\n\n        // Load file list\n        app.fileListState.setUser(vnode.attrs.user || app.session.user);\n\n        this.inModal = vnode.attrs.selectable;\n        this.restrictFileType = vnode.attrs.restrictFileType || null;\n        this.downloadOnClick = this.attrs.downloadOnClick || false;\n        /**\n         * @type {string[]} List of file UUIDs currently being hidden.\n         */\n        this.filesBeingHidden = [];\n\n        /**\n         * The user who's media we are dealing with\n         */\n        this.user = app.fileListState.user;\n    }\n\n    view() {\n        /**\n         * @type {{empty(): boolean, files: import('../../common/models/File').default[]}}\n         */\n        const state = app.fileListState;\n\n        return (\n            <div className=\"fof-upload-file-list\" aria-live=\"polite\">\n                {/* Loading */}\n                {state.isLoading() && state.files.length === 0 && (\n                    <div className={'fof-upload-loading'}>\n                        {app.translator.trans('fof-upload.forum.file_list.loading')}\n\n                        <LoadingIndicator />\n                    </div>\n                )}\n\n                {/* Empty personal file list */}\n                {this.inModal && state.empty() && (\n                    <p className=\"fof-upload-empty\">\n                        <i className=\"fas fa-cloud-upload-alt fof-upload-empty-icon\" />\n\n                        {app.translator.trans(`fof-upload.forum.file_list.modal_empty_${app.screen() !== 'phone' ? 'desktop' : 'phone'}`)}\n                    </p>\n                )}\n\n                {/* Empty file list */}\n                {!this.inModal && state.empty() && <p className=\"fof-upload-empty\">{app.translator.trans('fof-upload.forum.file_list.empty')}</p>}\n\n                {/* File list */}\n                <ul>\n                    {state.files.map((file) => {\n                        const fileIcon = mimeToIcon(file.type());\n                        const fileSelectable = this.restrictFileType ? this.isSelectable(file) : true;\n\n                        const fileClassNames = classList([\n                            'fof-file',\n                            // File is image\n                            fileIcon === 'image' && 'fof-file-type-image',\n                            // File is selected\n                            this.attrs.selectedFiles && this.attrs.selectedFiles.indexOf(file.id()) >= 0 && 'fof-file-selected',\n                        ]);\n\n                        /**\n                         * File's baseName (file name + extension)\n                         * @type {string}\n                         */\n                        const fileName = file.baseName();\n\n                        const isFileHiding = this.filesBeingHidden.includes(file.uuid());\n\n                        return (\n                            <li aria-busy={isFileHiding}>\n                                {app.session.user && (this.user === app.session.user || app.session.user.deleteOthersMediaLibrary()) && (\n                                    <Button\n                                        className=\"Button Button--icon fof-file-delete\"\n                                        icon=\"far fa-trash-alt\"\n                                        aria-label={app.translator.trans('fof-upload.forum.file_list.delete_file_a11y_label', { fileName })}\n                                        disabled={isFileHiding}\n                                        onclick={this.hideFile.bind(this, file)}\n                                    />\n                                )}\n\n                                <button\n                                    className={fileClassNames}\n                                    onclick={() => this.onFileClick(file)}\n                                    disabled={!fileSelectable || isFileHiding}\n                                    aria-label={extractText(app.translator.trans('fof-upload.forum.file_list.select_file_a11y_label', { fileName }))}\n                                >\n                                    <figure>\n                                        {fileIcon === 'image' ? (\n                                            <img\n                                                src={file.url()}\n                                                className=\"fof-file-image-preview\"\n                                                draggable={false}\n                                                // Images should always have an `alt`, even if empty!\n                                                //\n                                                // As we already state the file name as part of the\n                                                // button alt label, there's no point in restating it.\n                                                //\n                                                // See: https://www.w3.org/WAI/tutorials/images/decorative#decorative-image-as-part-of-a-text-link\n                                                alt=\"\"\n                                            />\n                                        ) : (\n                                            <span\n                                                className=\"fof-file-icon\"\n                                                // Prevents a screen-reader from traversing this node.\n                                                //\n                                                // This is a placeholder for when no preview is available,\n                                                // and a preview won't benefit a user using a screen\n                                                // reader anyway, so there is no benefit to making them\n                                                // aware of a lack of a preview.\n                                                role=\"presentation\"\n                                            >\n                                                <i className={`fa-fw ${fileIcon}`} />\n                                            </span>\n                                        )}\n\n                                        <figcaption className=\"fof-file-name\">{fileName}</figcaption>\n\n                                        {isFileHiding && (\n                                            <span\n                                                class=\"fof-file-loading\"\n                                                role=\"status\"\n                                                aria-label={app.translator.trans('fof-upload.forum.file_list.hide_file.loading')}\n                                            >\n                                                <LoadingIndicator />\n                                            </span>\n                                        )}\n                                    </figure>\n                                </button>\n                            </li>\n                        );\n                    })}\n                </ul>\n\n                {/* Load more files */}\n                {state.hasMoreResults() && (\n                    <div className={'fof-load-more-files'}>\n                        <Button\n                            className={'Button Button--primary'}\n                            disabled={state.isLoading()}\n                            loading={state.isLoading()}\n                            onclick={() => state.loadMore()}\n                        >\n                            {app.translator.trans('fof-upload.forum.file_list.load_more_files_btn')}\n                        </Button>\n                    </div>\n                )}\n            </div>\n        );\n    }\n\n    /**\n     * Execute function on file click\n     *\n     * @param {import('../../common/models/File').default} file\n     */\n    onFileClick(file) {\n        // Custom functionality\n        if (this.attrs.onFileSelect) {\n            this.attrs.onFileSelect(file);\n            return;\n        }\n\n        // Download on click\n        if (this.attrs.downloadOnClick) {\n            window.open(file.url());\n            return;\n        }\n    }\n\n    /**\n     * Check if a file is selectable\n     *\n     * @param {import('../../common/models/File').default} file\n     */\n    isSelectable(file) {\n        const fileType = file.type();\n\n        // Custom defined file types\n        if (Array.isArray(this.restrictFileType)) {\n            return this.restrictFileType.indexOf(fileType) >= 0;\n        }\n\n        // Image\n        else if (this.restrictFileType === 'image') {\n            return fileType.includes('image/');\n        }\n\n        // Audio\n        else if (this.restrictFileType === 'audio') {\n            return fileType.includes('audio/');\n        }\n\n        // Video\n        else if (this.restrictFileType === 'video') {\n            return fileType.includes('video/');\n        }\n\n        return false;\n    }\n\n    /**\n     * Begins the hiding process for a file.\n     *\n     * - Shows a native confirmation dialog\n     * - If confirmed, sends AJAX request to the hide file API\n     *\n     * @param {import('../../common/models/File').default} file File to hide\n     */\n    hideFile(file) {\n        /**\n         * @type {string} File UUID\n         */\n        const uuid = file.uuid();\n\n        if (this.filesBeingHidden.includes(uuid)) return;\n\n        this.filesBeingHidden.push(uuid);\n\n        const confirmHide = confirm(\n            extractText(app.translator.trans('fof-upload.forum.file_list.hide_file.hide_confirmation', { fileName: file.baseName() }))\n        );\n\n        if (confirmHide) {\n            app.request({\n                method: 'PATCH',\n                url: `${app.forum.attribute('apiUrl')}/fof/upload/hide`,\n                body: { uuid },\n            })\n                .then(() => {\n                    app.alerts.show(Alert, { type: 'success' }, app.translator.trans('fof-upload.forum.file_list.hide_file.hide_success'));\n                })\n                .catch(() => {\n                    app.alerts.show(\n                        Alert,\n                        { type: 'error' },\n                        app.translator.trans('fof-upload.forum.file_list.hide_file.hide_fail', { fileName: file.fileName() })\n                    );\n                })\n                .then(() => {\n                    // Remove hidden file from state\n                    /**\n                     * @type {{ files: import('../../common/models/File').default[] }}\n                     */\n                    const state = app.fileListState;\n\n                    const index = state.files.findIndex((file) => uuid === file.uuid());\n                    state.files.splice(index, 1);\n\n                    // Remove file from hiding list\n                    const i = this.filesBeingHidden.indexOf(uuid);\n                    this.filesBeingHidden.splice(i, 1);\n                });\n        } else {\n            // Remove file from hiding list\n            const i = this.filesBeingHidden.indexOf(uuid);\n            this.filesBeingHidden.splice(i, 1);\n        }\n    }\n}\n","import Modal from 'flarum/common/components/Modal';\nimport Button from 'flarum/common/components/Button';\nimport UploadButton from './UploadButton';\nimport UserFileList from './UserFileList';\nimport DragAndDrop from './DragAndDrop';\n\nexport default class FileManagerModal extends Modal {\n    oninit(vnode) {\n        super.oninit(vnode);\n\n        // Initialize upload managers\n        this.uploader = vnode.attrs.uploader;\n\n        // Current selected files\n        this.selectedFiles = [];\n\n        // Allow multiselect\n        this.multiSelect = vnode.attrs.multiSelect || true;\n\n        // Restrict file selection to specific types\n        this.restrictFileType = vnode.attrs.restrictFileType || null;\n\n        // Drag & drop\n        this.dragDrop = null;\n\n        // Initialize uploads\n        this.onUpload();\n    }\n\n    className() {\n        return 'Modal--large fof-file-manager-modal';\n    }\n\n    /**\n     * Initialize drag & drop\n     */\n    oncreate(vnode) {\n        super.oncreate(vnode);\n\n        this.dragDrop = new DragAndDrop((files) => this.uploader.upload(files, false), this.$().find('.Modal-content')[0]);\n    }\n\n    /**\n     * Remove events from modal content\n     */\n    onremove() {\n        if (this.dragDrop) {\n            this.dragDrop.unload();\n        }\n    }\n\n    view() {\n        return (\n            <div className={`Modal modal-dialog ${this.className()}`}>\n                <div className=\"Modal-content\">\n                    <div className=\"fof-modal-buttons App-backControl\">\n                        <UploadButton uploader={this.uploader} disabled={app.fileListState.isLoading()} isMediaUploadButton />\n                    </div>\n\n                    <div className=\"fof-drag-and-drop\">\n                        <div className=\"fof-drag-and-drop-release\">\n                            <i className=\"fas fa-cloud-upload-alt\" />\n\n                            {app.translator.trans('fof-upload.forum.file_list.release_to_upload')}\n                        </div>\n                    </div>\n\n                    <div className=\"Modal-header\">\n                        <h3 className=\"App-titleControl App-titleControl--text\">{app.translator.trans('fof-upload.forum.media_manager')}</h3>\n                    </div>\n\n                    {this.alertAttrs && (\n                        <div className=\"Modal-alert\">\n                            <Alert {...this.alertAttrs} />\n                        </div>\n                    )}\n\n                    <div className=\"Modal-body\">\n                        <UserFileList\n                            user={this.attrs.user}\n                            selectable\n                            onFileSelect={this.onFileSelect.bind(this)}\n                            selectedFiles={this.selectedFiles}\n                            restrictFileType={this.restrictFileType}\n                        />\n                    </div>\n\n                    <div className=\"Modal-footer\">\n                        <Button onclick={this.hide.bind(this)} className=\"Button\">\n                            {app.translator.trans('fof-upload.forum.buttons.cancel')}\n                        </Button>\n\n                        <Button\n                            onclick={this.onSelect.bind(this)}\n                            disabled={this.selectedFiles.length === 0 || (!this.multiSelect && this.selectedFiles.length > 1)}\n                            className=\"Button Button--primary\"\n                        >\n                            {app.translator.transChoice('fof-upload.forum.file_list.confirm_selection_btn', this.selectedFiles.length)}\n                        </Button>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    /**\n     * Add or remove file from selected files\n     *\n     * @param {File} file\n     */\n    onFileSelect(file) {\n        const itemPosition = this.selectedFiles.indexOf(file.id());\n\n        if (itemPosition >= 0) {\n            this.selectedFiles.splice(itemPosition, 1);\n        } else {\n            if (this.multiSelect) {\n                this.selectedFiles.push(file.id());\n            } else {\n                this.selectedFiles = [file.id()];\n            }\n        }\n    }\n\n    /**\n     * Add files to file list after upload\n     */\n    onUpload() {\n        this.uploader.on('success', ({ file }) => {\n            if (this.multiSelect) {\n                this.selectedFiles.push(file.id());\n            } else {\n                this.selectedFiles = [file.id()];\n            }\n        });\n    }\n\n    /**\n     * Add selected files to the composer\n     */\n    onSelect() {\n        this.hide();\n\n        // Custom callback\n        if (this.attrs.onSelect) {\n            this.attrs.onSelect(this.selectedFiles);\n\n            return;\n        }\n\n        // Add selected files to composer\n        this.selectedFiles.map((fileId) => {\n            const file = app.store.getById('files', fileId);\n\n            app.composer.editor.insertAtCursor(file.bbcode() + '\\n');\n        });\n    }\n}\n","import app from 'flarum/common/app';\nimport Component from 'flarum/common/Component';\nimport Button from 'flarum/common/components/Button';\nimport FileManagerModal from './FileManagerModal';\n\nexport default class FileManagerButton extends Component {\n    view() {\n        return Button.component({\n            className: 'Button fof-upload-button Button--icon',\n            onclick: this.fileManagerButtonClicked.bind(this),\n            icon: 'fas fa-photo-video',\n            title: app.translator.trans('fof-upload.forum.buttons.media'),\n        });\n    }\n\n    /**\n     * Show tooltip on hover\n     *\n     * @param {*} vnode\n     */\n    oncreate(vnode) {\n        super.oncreate(vnode);\n\n        // Add tooltip\n        this.$().tooltip();\n    }\n\n    /**\n     * Event handler for upload button being clicked\n     *\n     * @param {PointerEvent} e\n     */\n    fileManagerButtonClicked(e) {\n        e.preventDefault();\n\n        // Open dialog\n        app.modal.show(FileManagerModal, {\n            uploader: this.attrs.uploader,\n        });\n    }\n}\n","import UserPage from 'flarum/forum/components/UserPage';\nimport UserFileList from './UserFileList';\n\nexport default class UploadsUserPage extends UserPage {\n    oninit(vnode) {\n        super.oninit(vnode);\n\n        this.user = null;\n\n        this.loadUser(m.route.param('username'));\n    }\n\n    content() {\n        if (app.session.user && (app.session.user.viewOthersMediaLibrary() || this.user === app.session.user)) {\n            return (\n                this.user &&\n                UserFileList.component({\n                    user: this.user,\n                    selectable: false,\n                    downloadOnClick: true,\n                })\n            );\n        } else {\n            return null;\n        }\n    }\n\n    show(user) {\n        super.show(user);\n        this.user = user;\n    }\n}\n","import Uploader from '../handler/Uploader';\nimport DragAndDrop from './DragAndDrop';\nimport FileManagerButton from './FileManagerButton';\nimport FileManagerModal from './FileManagerModal';\nimport UserFileList from './UserFileList';\n\nexport const components = {\n    DragAndDrop,\n    FileManagerButton,\n    FileManagerModal,\n    UserFileList,\n    Uploader,\n};\n","import { extend } from 'flarum/common/extend';\nimport app from 'flarum/common/app';\nimport UserPage from 'flarum/forum/components/UserPage';\nimport LinkButton from 'flarum/common/components/LinkButton';\n\nimport File from '../common/models/File';\nimport FileListState from './states/FileListState';\nimport downloadButtonInteraction from './downloadButtonInteraction';\nimport addUploadButton from './addUploadButton';\nimport UploadsUserPage from './components/UploadsUserPage';\nimport User from 'flarum/common/models/User';\nimport Model from 'flarum/common/Model';\n\nexport * from './components';\n\napp.initializers.add('fof-upload', () => {\n    User.prototype.viewOthersMediaLibrary = Model.attribute('fof-upload-viewOthersMediaLibrary');\n    User.prototype.deleteOthersMediaLibrary = Model.attribute('fof-upload-deleteOthersMediaLibrary');\n\n    addUploadButton();\n    downloadButtonInteraction();\n\n    // File model\n    app.store.models.files = File;\n\n    // File list state\n    app.fileListState = new FileListState();\n\n    // Add user uploads to the user profile\n    app.routes['user.uploads'] = {\n        path: '/u/:username/uploads',\n        component: UploadsUserPage,\n    };\n\n    // Add uploads to user page menu items\n    extend(UserPage.prototype, 'navItems', function (items) {\n        if (app.session.user && (app.session.user.viewOthersMediaLibrary() || this.user === app.session.user)) {\n            items.add(\n                'uploads',\n                LinkButton.component(\n                    {\n                        href: app.route('user.uploads', {\n                            username: this.user.username(),\n                        }),\n                        name: 'uploads',\n                        icon: 'fas fa-file-upload',\n                    },\n                    this.user === app.session.user\n                        ? app.translator.trans('fof-upload.forum.buttons.media')\n                        : app.translator.trans('fof-upload.forum.buttons.user_uploads')\n                ),\n                80\n            );\n        }\n    });\n});\n","import app from 'flarum/common/app';\nimport { extend } from 'flarum/common/extend';\nimport TextEditor from 'flarum/common/components/TextEditor';\nimport UploadButton from './components/UploadButton';\nimport DragAndDrop from './components/DragAndDrop';\nimport PasteClipboard from './components/PasteClipboard';\nimport Uploader from './handler/Uploader';\nimport FileManagerButton from './components/FileManagerButton';\n\nexport default function () {\n    extend(TextEditor.prototype, 'oninit', function () {\n        this.uploader = new Uploader();\n    });\n    extend(TextEditor.prototype, 'controlItems', function (items) {\n        if (!app.forum.attribute('fof-upload.canUpload')) return;\n\n        const composerButtonVisiblity = app.forum.attribute('fof-upload.composerButtonVisiblity');\n\n        // Add media button\n        if (composerButtonVisiblity === 'both' || composerButtonVisiblity === 'media-btn') {\n            items.add(\n                'fof-upload-media',\n                FileManagerButton.component({\n                    uploader: this.uploader,\n                })\n            );\n        }\n\n        // Add upload button\n        if (composerButtonVisiblity === 'both' || composerButtonVisiblity === 'upload-btn') {\n            items.add(\n                'fof-upload',\n                UploadButton.component({\n                    uploader: this.uploader,\n                })\n            );\n        }\n    });\n\n    extend(TextEditor.prototype, 'oncreate', function (f_, vnode) {\n        if (!app.forum.attribute('fof-upload.canUpload')) return;\n\n        this.uploader.on('success', ({ file, addBBcode }) => {\n            if (!addBBcode) return;\n\n            this.attrs.composer.editor.insertAtCursor(file.bbcode() + '\\n');\n\n            // We wrap this in a typeof check to prevent it running when a user\n            // is creating a new discussion. There's nothing to preview in a new\n            // discussion, so the `preview` function isn't defined.\n            if (typeof this.attrs.preview === 'function') {\n                // Scroll the preview into view\n                // preview() causes the composer to close on mobile, but we don't want that. We want only the scroll\n                // We work around that by temporarily patching the isFullScreen method\n                const originalIsFullScreen = app.composer.isFullScreen;\n\n                app.composer.isFullScreen = () => false;\n\n                this.attrs.preview();\n\n                app.composer.isFullScreen = originalIsFullScreen;\n            }\n        });\n\n        this.dragAndDrop = new DragAndDrop((files) => this.uploader.upload(files), this.$().parents('.Composer')[0]);\n\n        new PasteClipboard((files) => this.uploader.upload(files), this.$('.TextEditor-editor')[0]);\n    });\n\n    extend(TextEditor.prototype, 'onremove', function (f_, vnode) {\n        if (!app.forum.attribute('fof-upload.canUpload')) return;\n\n        this.dragAndDrop.unload();\n    });\n}\n","import app from 'flarum/common/app';\nimport { extend } from 'flarum/common/extend';\nimport Post from 'flarum/forum/components/Post';\n\n/* global $ */\n\nexport default function () {\n    extend(Post.prototype, 'oncreate', function () {\n        this.$('[data-fof-upload-download-uuid]')\n            .unbind('click')\n            .on('click', (e) => {\n                e.preventDefault();\n                e.stopPropagation();\n\n                if (!app.forum.attribute('fof-upload.canDownload')) {\n                    alert(app.translator.trans('fof-upload.forum.states.unauthorized'));\n                    return;\n                }\n\n                let url = app.forum.attribute('apiUrl') + '/fof/download';\n\n                url += '/' + e.currentTarget.dataset.fofUploadDownloadUuid;\n                url += '/' + this.attrs.post.id();\n                url += '/' + app.session.csrfToken;\n\n                window.open(url);\n            });\n    });\n}\n"],"sourceRoot":""}